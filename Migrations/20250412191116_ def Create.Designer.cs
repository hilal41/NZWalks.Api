// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.Api.Data;

#nullable disable

namespace NZWalks.Api.Migrations
{
    [DbContext(typeof(WalksDbContext))]
    [Migration("20250412191116_ def Create")]
    partial class defCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.Api.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3cb226c-f92b-4699-aed3-5f688ed43baf"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("a4eb412c-cd0b-4fae-93de-5280b7f98cba"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("5cf21b0c-4d90-480b-8ace-dc6da688abd1"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.Api.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3cb226c-f92b-4699-aed3-5f688ed43baf"),
                            Code = "NI",
                            Name = "North Island",
                            RegionImageUrl = "https://example.com/region1.jpg"
                        },
                        new
                        {
                            Id = new Guid("a4eb412c-cd0b-4fae-93de-5280b7f98cba"),
                            Code = "SI",
                            Name = "South Island",
                            RegionImageUrl = "https://example.com/region2.jpg"
                        },
                        new
                        {
                            Id = new Guid("5cf21b0c-4d90-480b-8ace-dc6da688abd1"),
                            Code = "OT",
                            Name = "Other",
                            RegionImageUrl = "https://example.com/region3.jpg"
                        });
                });

            modelBuilder.Entity("NZWalks.Api.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalksImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("walks");
                });

            modelBuilder.Entity("NZWalks.Api.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.Api.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.Api.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
